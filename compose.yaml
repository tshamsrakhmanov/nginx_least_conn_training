services:

  stub1:
    build:
      context: .
      args:
        response: 1000
    image: stub_image
    container_name: stub1

    hostname: stub1
    networks:
      - stubs_network

  stub2:
    image: stub_image
    container_name: stub2
    depends_on:
      - stub1
    pull_policy: never
    hostname: stub2
    networks:
      - stubs_network

  balancer:
    image: nginx:latest
    depends_on:
      - stub1
      - stub2
    ports:
      - "80:80" # map internal port 80 to external port 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf # use custom nginx config
    hostname: nginx
    container_name: nginx
    networks:
      - stubs_network
      - external_network

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - '3000:3000'  # Expose Grafana on port 3000
    volumes:
      - grafana_data:/var/lib/grafana  # Mount the Grafana data directory
    hostname: grafana
    networks:
      - external_network
      - grafana_prometheus_network

  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always
    networks:
      - grafana_prometheus_network
      - stubs_network
    hostname: prometheus
    container_name: prometheus

volumes:
  grafana_data: {}  # Volume for Grafana data
  prometheus_data: {}

networks:
  stubs_network:
  external_network:
    driver: bridge
  grafana_prometheus_network: